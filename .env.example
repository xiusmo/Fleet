#################################################
# 一、数据库（PostgreSQL）相关
#################################################
DB_USER=              # 数据库用户名（如 postgres）
DB_PASSWORD=          # 数据库密码
DB_NAME=              # 数据库名称（如 task_scheduler）

#################################################
# 二、pgAdmin 管理界面
#################################################
PGADMIN_EMAIL=        # pgAdmin 登录邮箱
PGADMIN_PASSWORD=     # pgAdmin 登录密码
PGADMIN_LISTEN_PORT=5050  # pgAdmin 监听端口（可选，默认 5050）

#################################################
# 三、后端 & 调度器（fleet_master）服务
#################################################
DATABASE_URL=         # SQLAlchemy 连接串，例如：
                      # postgresql+asyncpg://postgres:postgres@db:5432/task_scheduler
SECRET_KEY=           # 应用/调度器用的密钥（JWT、Django/Flask SECRET_KEY）
ALGORITHM=HS256       # JWT 签名算法
ACCESS_TOKEN_EXPIRE_MINUTES=60  # 访问令牌过期分钟
API_PREFIX=/api/v1    # 所有接口前缀
HOST=0.0.0.0          # 服务监听地址
PORT=8000             # 服务监听端口
DEBUG=false           # 是否启用调试/开发模式
ALLOW_REGISTER=true   # 是否允许注册
CURRENT_NODE=fleet    # 当前节点标识，可用于灰度/分布式环境
TURNSTILE_SITE_KEY=   # Cloudflare Turnstile 公钥
TURNSTILE_SECRET_KEY= # Cloudflare Turnstile 私钥

#################################################
# 四、Nginx + ModSecurity
#################################################
NGINX_PORT=80         # HTTP 端口
NGINX_SSL_PORT=443    # HTTPS 端口
PARANOIA=1
ANOMALY_INBOUND=5
ANOMALY_OUTBOUND=4
EXECUTING_PARANOIA=2
ENFORCE_BODYPROC_URLENCODED=1
MAX_FILE_SIZE=100000000
ALLOWED_METHODS="GET POST PUT DELETE OPTIONS"
ALLOW_RULE_ENGINE=On

#################################################
# 五、前端（Vite 打包）——admin_dashboard & user_frontend
#################################################
VITE_API_BASE_URL=    # 打包时的 API 根路径，如 https://api.yourdomain.com/api/v1
VITE_TURNSTILE_SITE_KEY=  # Turnstile 公钥

#################################################
# 六、CI/CD（GHCR 私有镜像管理）
#################################################
GHCR_OWNER=           # GitHub 用户或组织名
GHCR_TOKEN=           # GHCR 访问用的 Personal Access Token（需含 write:packages 权限）
GHCR_REPO=fleet       # 仓库名，用于镜像标签前缀
