# 设置HTTP重定向到HTTPS
server {
    listen 80;
    server_name xiusmo.com www.xiusmo.com;
    # 拦截没有 Cloudflare 代理头的请求
    if ($http_cf_connecting_ip = "") {
        return 444;
    }
    
    # Certbot验证目录
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # 将所有HTTP请求重定向到HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server{
    listen 443 ssl;
    server_name pgadmin.xiusmo.com;
    # 拦截没有 Cloudflare 代理头的请求
    if ($http_cf_connecting_ip = "") {
        return 444;
    }

    # SSL证书配置
    ssl_certificate     /etc/nginx/ssl/cf_fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/cf.key;
    
    # SSL参数
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_ecdh_curve secp384r1;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # 安全性headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header Content-Security-Policy "
    #     default-src 'self';
    #     script-src 'self' 'unsafe-inline' 'unsafe-eval' https://challenges.cloudflare.com https://static.cloudflareinsights.com;
    #     connect-src 'self' https://challenges.cloudflare.com;
    #     img-src 'self' data: blob: https://www.gravatar.com;
    #     style-src 'self' 'unsafe-inline';
    #     font-src 'self' data: https:;
    #     frame-src 'self' https://challenges.cloudflare.com https://pgadmin.xiusmo.com;
    # " always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # 禁用服务器版本显示
    server_tokens off;

    # 限制请求方法
    if ($request_method !~ ^(GET|POST|PUT|DELETE|OPTIONS)$) {
        return 405;
    }
    
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        return 204;
    }
    # pgAdmin访问
    location / {
        proxy_pass http://pgadmin:5050/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 添加以下配置来处理重定向和 WebSocket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        
        # 增加超时设置
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # 修改 Cookie 和缓存行为
        proxy_cookie_path / "/; SameSite=None; Secure";
        proxy_buffering off;
        
        # 增加基本认证
        auth_basic "管理员区域";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }
}

server{
    listen 443 ssl;
    server_name admin.xiusmo.com;
    # 拦截没有 Cloudflare 代理头的请求
    if ($http_cf_connecting_ip = "") {
        return 444;
    }

    # SSL证书配置
    ssl_certificate     /etc/nginx/ssl/cf_fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/cf.key;
    
    # SSL参数
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_ecdh_curve secp384r1;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # 安全性headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://challenges.cloudflare.com https://static.cloudflareinsights.com; connect-src 'self' https://challenges.cloudflare.com; img-src 'self' data: blob:; style-src 'self' 'unsafe-inline'; font-src 'self' data:; frame-src https://challenges.cloudflare.com;" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # 禁用服务器版本显示
    server_tokens off;

    # 限制请求方法
    if ($request_method !~ ^(GET|POST|PUT|DELETE|OPTIONS)$) {
        return 405;
    }

    location / {
        root /usr/share/nginx/frontend/admin/;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # 增加基本认证
        auth_basic "管理员区域";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }

    location /api/ {
        proxy_pass http://backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# 主服务器配置(HTTPS)
server {
    listen 443 ssl;
    server_name xiusmo.com www.xiusmo.com;
    # 拦截没有 Cloudflare 代理头的请求
    if ($http_cf_connecting_ip = "") {
        return 444;
    }
    client_max_body_size 100M;
    
    # SSL证书配置
    # ssl_certificate /etc/letsencrypt/live/xiusmo.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/xiusmo.com/privkey.pem;
    # ssl_trusted_certificate /etc/letsencrypt/live/xiusmo.com/chain.pem;
    ssl_certificate     /etc/nginx/ssl/cf_fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/cf.key;
    
    # SSL参数
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_ecdh_curve secp384r1;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # 安全性headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://challenges.cloudflare.com https://static.cloudflareinsights.com; connect-src 'self' https://challenges.cloudflare.com; img-src 'self' data: blob:; style-src 'self' 'unsafe-inline'; font-src 'self' data:; frame-src https://challenges.cloudflare.com;" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # 禁用服务器版本显示
    server_tokens off;

    # 限制请求方法
    if ($request_method !~ ^(GET|POST|PUT|DELETE|OPTIONS)$) {
        return 405;
    }

    location /speedtest/ {
        alias /usr/share/nginx/speedtest/;
    }

    # 后端API
    location /api/ {
        proxy_pass http://backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 限制请求速率，防止DoS攻击
        limit_req zone=api_limit burst=20 nodelay;
        limit_conn conn_limit_per_ip 10;
    }

    # 健康检查
    location /health {
        proxy_pass http://backend:8000/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # 限制IP访问，只允许内部网络
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }


    # 用户前端
    location / {
        root /usr/share/nginx/frontend/user;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # 缓存静态资源
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }
    }

    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 错误页面
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
